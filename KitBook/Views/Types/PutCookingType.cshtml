@model KitBook.Models.ViewModels.TypeViewModel

@{
    ViewData["Title"] = "Редактирование";
}

<h1>Редактирование типа готовки</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="PutCookingType" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" readonly="readonly" style="font-style:italic" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            @if (Model.ExistingIcon != null)
            {
                <div class="invisible">
                    <input asp-for="ExistingIcon.Base64String" type="text" value="@Model.ExistingIcon.Base64String" />
                    <input asp-for="ExistingIcon.Extension" type="text" value="@Model.ExistingIcon.Extension" />
                </div>
                <img class="img-fluid" src="data:image/@Model.ExistingIcon.Extension;base64,@Model.ExistingIcon.Base64String" />
            }
            <div class="form-group">
                <label asp-for="Icon" class="control-label"></label>
                <input asp-for="Icon" type="file" class="form-control" />
                <span asp-validation-for="Icon" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="GetCookingTypes">К списку</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
